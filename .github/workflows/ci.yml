name: Node.js CI
on:
  push:
    branches: [master]
  pull_request_target:
    types: [opened, synchronize, reopened]
  pull_request:
    types: [opened, synchronize, reopened]
    paths:
      - .github/workflows/ci.yml

concurrency: ${{ github.workflow }}--${{ github.ref }}

jobs:
  CI:
    runs-on: ubuntu-latest
    strategy:
      # We do not want to run CRUD tests in parallel
      max-parallel: 1
      matrix:
        node-version: [14.x, 16.x, 18.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha || github.sha }}

      - name: Decrypt keyfile
        run: ./.github/scripts/decrypt_secret.sh
        env:
          KEYFILE_PASSPHRASE: ${{secrets.KEYFILE_PASSPHRASE}}

      - name: Checkout sources
        uses: actions/checkout@v3

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(corepack yarn config get cacheFolder)"
      - uses: actions/cache@v3
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{matrix.node-version}}

      - name: Install dependencies
        run: corepack yarn

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Run linters
      - run: yarn lint

      - name: Run tests
      - run: yarn test
        env:
          AWS_BUCKET: ${{secrets.AWS_BUCKET}}
          AWS_ACCESS_KEY_ID: ${{secrets.AWS_ACCESS_KEY_ID}}
          AWS_SECRET_ACCESS_KEY: ${{secrets.AWS_SECRET_ACCESS_KEY}}
          AWS_REGION: ${{secrets.AWS_REGION}}
